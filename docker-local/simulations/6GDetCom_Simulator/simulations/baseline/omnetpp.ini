[General]
sim-time-limit = 60s
description = "General configuration"

**.displayGateSchedules = false
**.gateFilter = "**.eth[1].**"
**.gateScheduleVisualizer.height = 16
**.gateScheduleVisualizer.placementHint = "top"

*.histogramContainer.histograms = {Uplink: "../../../deterministic6g_data/PD-Wireless-5G-1/s1-UL_wall.xml", Downlink: "../../../deterministic6g_data/PD-Wireless-5G-1/s10-DL_wall.xml"}


[Unidirectional_LeftToRight]
extends = General
network = Baseline
description = "Basic configuration for networks with a unidirectional communication from left to right"

*.detCom.dstt[0].delayUplink = rngProvider("histogramContainer","Uplink")

# client applications
*.device1.numApps = 1
*.device1.app[0].typename = "UdpSourceApp"
*.device1.app[0].io.destAddress = "device2"
*.device1.app[0].io.destPort = 1001
*.device1.app[0].source.packetLength = 1000B - 54B # 54B = 8B (UDP) + 20B (IP) + 14B (ETH MAC) + 4B (ETH FCS) + 8B (ETH PHY)
*.device1.app[0].source.productionInterval = 10ms

# enable outgoing streams
*.device1.hasOutgoingStreams = true

# server applications
*.device2.numApps = 1
*.device2.app[0].typename = "UdpSinkApp"
*.device2.app[0].io.localPort = 1001


[Unidirectional_RightToLeft]
extends = General
network = Baseline
description = "Basic configuration for networks with a unidirectional communication from right to left"

*.detCom.dstt[0].delayDownlink = rngProvider("histogramContainer","Downlink")

# client applications
*.device2.numApps = 1
*.device2.app[0].typename = "UdpSourceApp"
*.device2.app[0].io.destAddress = "device1"
*.device2.app[0].io.destPort = 1001
*.device2.app[0].source.packetLength = 1000B - 54B # 54B = 8B (UDP) + 20B (IP) + 14B (ETH MAC) + 4B (ETH FCS) + 8B (ETH PHY)
*.device2.app[0].source.productionInterval = 10ms
# enable outgoing streams
*.device2.hasOutgoingStreams = true


# server applications
*.device1.numApps = 1
*.device1.app[0].typename = "UdpSinkApp"
*.device1.app[0].io.localPort = 1001


[Bidirectional]
extends = General
network = Baseline
description = "Basic configuration for networks with a bidirectional communication"

*.detCom.delayConfig = xmldoc("delays_example.xml")

# client applications
*.device1.numApps = 2
*.device1.app[0].typename = "UdpSourceApp"
*.device1.app[0].io.destAddress = "device2"
*.device1.app[0].io.destPort = 1001
*.device1.app[0].source.packetLength = 1000B - 54B # 54B = 8B (UDP) + 20B (IP) + 14B (ETH MAC) + 4B (ETH FCS) + 8B (ETH PHY)
*.device1.app[0].source.productionInterval = 10ms

*.device1.app[1].typename = "UdpSinkApp"
*.device1.app[1].io.localPort = 1002

# enable outgoing streams
*.device1.hasOutgoingStreams = true


# server applications
*.device2.numApps = 2
*.device2.app[0].typename = "UdpSinkApp"
*.device2.app[0].io.localPort = 1001

*.device2.app[1].typename = "UdpSourceApp"
*.device2.app[1].io.destAddress = "device1"
*.device2.app[1].io.destPort = 1002
*.device2.app[1].source.packetLength = 1000B - 54B # 54B = 8B (UDP) + 20B (IP) + 14B (ETH MAC) + 4B (ETH FCS) + 8B (ETH PHY)
*.device2.app[1].source.productionInterval = 10ms
# enable outgoing streams
*.device2.hasOutgoingStreams = true


[Bidirectional_RandomWalk]
extends=Bidirectional
description = "Basic configuration for networks with a bidirectional communication and a random walk process for downlink delay"

*.detCom.dstt[0].bridging.delayLayer.delayDownlink = randomWalk(5.5ms,normal(0ms,100us))
